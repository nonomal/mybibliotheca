# Bibliotheca Backup Systemd Service and Timer Configuration
# These files provide automated backup scheduling for Linux systems

# /etc/systemd/system/bibliotheca-backup.service
[Unit]
Description=Bibliotheca Backup Service
After=network.target

[Service]
Type=oneshot
User=bibliotheca
Group=bibliotheca
WorkingDirectory=/opt/bibliotheca
ExecStart=/opt/bibliotheca/scripts/backup_cli.py create --type full --name "scheduled-$(date +%%Y%%m%%d-%%H%%M%%S)"
StandardOutput=journal
StandardError=journal

# /etc/systemd/system/bibliotheca-backup.timer
[Unit]
Description=Run Bibliotheca Backup Daily
Requires=bibliotheca-backup.service

[Timer]
OnCalendar=daily
Persistent=true
RandomizedDelaySec=1800

[Install]
WantedBy=timers.target

# Installation Instructions:
# 1. Copy the service file to /etc/systemd/system/bibliotheca-backup.service
# 2. Copy the timer file to /etc/systemd/system/bibliotheca-backup.timer
# 3. Adjust paths and user/group as needed
# 4. Enable and start the timer:
#    sudo systemctl daemon-reload
#    sudo systemctl enable bibliotheca-backup.timer
#    sudo systemctl start bibliotheca-backup.timer
# 5. Check status:
#    sudo systemctl status bibliotheca-backup.timer
#    sudo systemctl list-timers | grep bibliotheca

# Docker Compose Alternative:
# For Docker deployments, add this to your docker-compose.yml:
#
# services:
#   backup-scheduler:
#     image: alpine:latest
#     volumes:
#       - ./:/app
#       - ./backups:/app/backups
#     working_dir: /app
#     command: >
#       sh -c "
#       apk add --no-cache python3 py3-pip &&
#       pip3 install -r requirements.txt &&
#       while true; do
#         python3 scripts/backup_cli.py create --type full
#         sleep 86400  # 24 hours
#       done"
#     restart: unless-stopped
#     depends_on:
#       - bibliotheca
